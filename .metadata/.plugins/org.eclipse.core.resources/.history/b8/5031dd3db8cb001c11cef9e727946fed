package com.moto.microservice.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.moto.microservice.entity.Motorcycle;
import com.moto.microservice.services.MotoService;

@RestController
@RequestMapping("/motos")
public class MotoController {
	
	@Autowired
	private MotoService motoService;

	@GetMapping
	public ResponseEntity<List<Motorcycle>> getMotorcycles(){
		List<Motorcycle> motos = motoService.getAll();
		if(motos.isEmpty()) {
			return ResponseEntity.noContent().build();
		}else {
			return ResponseEntity.ok(motos);
		}
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Car> obtainCar(@PathVariable("id") int id){
		Car car = carService.getCarById(id);
		if(car == null) {
			return ResponseEntity.notFound().build();
		}else {
			return ResponseEntity.ok(car);
		}
	}
	
	@PostMapping
	public ResponseEntity<Car> saveCar(@RequestBody Car car){
		Car newCar = carService.save(car);
		return ResponseEntity.ok(newCar);
	}
	
	@GetMapping("/usuario/{userId}")
	public ResponseEntity<List<Car>> getCarsByUserId(@PathVariable ("userId") int userId){
		List<Car> cars = carService.findByUserId(userId);
		if(cars.isEmpty()) {
			return ResponseEntity.noContent().build();
		}else {
			return ResponseEntity.ok(cars);
		}
	}
}
